<h1>About</h1>
<p>國立虎尾科技大學機械設計工程系</p>
<p>National Formosa University</p>
<p>Department of Mechanical Design Engineering</p>
<p>cp2024 計算機程式</p>
<p>課程教材:</p>
<p style="padding-left: 30px;"><a href="https://blog.jupyter.org/introducing-learn-python-with-jupyter-11214f152159">Learn Python with Jupyter</a> (<a href="https://www.learnpythonwithjupyter.com/">site</a>, <a href="https://localhost:9445/downloads/learn_python_with_jupyter.pdf">ebook</a>)</p>
<p style="padding-left: 30px;">教育版帳號 microsoftonline 登入點: <a href="https://login.microsoftonline.com/">https://login.microsoftonline.com/</a></p>
<p>Teams 線上教學:</p>
<p style="padding-left: 30px;">以 "學號@nfu.edu.tw" 登入 <a href="https://login.microsoftonline.com/">https://login.microsoftonline.com/</a> Office 365</p>
<p style="padding-left: 30px;">Teams 團隊代碼: fqpabi8</p>
<p>個人倉儲: <a href="https://github.com/mdecp2024/hw-wlison888">https://github.com/mdecp2024/hw-wlison888</a> </p>
<p>個人網站: <a class="Link--inTextBlock" href="https://mdecp2024.github.io/hw-wlison888/">https://mdecp2024.github.io/hw-wlison888/</a></p>
<p>其他資訊:</p>
<p style="padding-left: 30px;"><a href="/downloads/cd2023_pj3ag4_zmq_football_4.7.7z">cd2023_pj3ag4_zmq_football_4.7.7z</a></p>
<p style="padding-left: 30px;"><a href="https://localhost:9446/downloads/cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z">cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z</a></p>
<h1>Attendance</h1>
<p>出席 (10%) - 自行舉證評分</p>
<p>自行利用 Github commits 提交記錄評分.</p>
<h1>HW 1</h1>
<h4>主題: 基於瀏覽器的分散式版次管理與整合程式開發環境 (10%)<span style="background-color: #ffff99;"><br/></span></h4>
<p style="padding-left: 30px;">USB 隨身碟:</p>
<p style="padding-left: 60px;">下載 <a href="http://229.cycu.org/python_2025_lite.7z">python_2025_lite.7z</a> (428 MB, 解開壓縮後約 1.5 GB)</p>
<p style="padding-left: 30px;"><a href="https://mde.tw/cp2024/content/Jupyter.html">Jupyter</a></p>
<p style="padding-left: 30px;">What are Github and Codespaces?</p>
<p style="padding-left: 60px;"><a href="https://docs.github.com/en/get-started/start-your-journey/hello-world">Hello World - GitHub Docs</a></p>
<p style="padding-left: 30px;">利用包含學號的字串作為帳號, 申請免費使用 Github.</p>
<p style="padding-left: 30px;">Python 課程教材: <a href="https://www.learnpythonwithjupyter.com/">https://www.learnpythonwithjupyter.com/</a> - PART 1</p>
<hr/>
<p>PART 1: Creating the basics 資料整理 (10%)</p>
<p>啟動可攜程式系統後, 在命令列中:</p>
<p>y:\&gt;cd notebook</p>
<p>y:\notebook&gt;jupyter lab --collaborative</p>
<p>進入 <a href="/downloads/01_string_input_print.ipynb">01_string_input_print.ipynb</a> 練習如何修改 PART1 notebook 後存檔, 上傳至作業倉儲中的 downloads 目錄後, 透過 <a href="https://nbviewer.org/">https://nbviewer.org/</a> 將已經提交的 <a href="/downloads/01_string_input_print.ipynb">01_string_input_print.ipynb</a>, 嵌入下列網頁中.</p>
<p><iframe height="400" src="https://nbviewer.org/urls/mde.tw/cp2024_hw/downloads/01_string_input_print.ipynb" width="600"></iframe></p>
<p>上列 iframe 標註的 html 語法:</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;iframe width="600" height="400" src="https://nbviewer.org/urls/mde.tw/cp2024_hw/downloads/01_string_input_print.ipynb"&gt;&lt;/iframe&gt;</pre>
<p>完成上述流程整理後, 請將 HW1 自評分數輸入 cp2024 自評表單中.</p>
<h2>HW 1 Exam</h2>
<p>每六人為一組進行協同程式練習</p>
<p>透過 Jupyterlab 協同網頁, 輪流指定各組編寫 Topic 1 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯.</p>
<h3>w7</h3>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/S4MDrzrxKlM?si=JphkR_rjD9sPqEFO" title="YouTube video player" width="560"></iframe></p>
<h3>w10</h3>
<p>題目一:</p>
<p><br/><span></span><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/kK3wLj14Sz4?si=cB04FWhrCGZc9RMG" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p></p>
<p>題目二:</p>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/JxTfmfJG868?si=MBbXdt-drJ23uybn" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p>題目三:</p>
<p>心得:<span>我覺得用我覺得用五種方法執行來解微積分和物理是十分有趣的我覺得用Jupyter和brython比較輕鬆沒有比較複雜的操作,而學習到的可以應用在物理和微積分上來解不會題目</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/PTGyKHZnEgU?si=n-HeS0iAnL0EhLU4" title="YouTube video player" width="560"></iframe></p>
<p><br/><br/><br/><br/><br/><br/><br/><span>題目一:</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import math

# 設定區域大小
size = 10
radius = 3  # 圓的半徑
center = (size // 2, size // 2)  # 圓心位置在 5,5

# 創建 10x10 的字元區域
grid = [[' ' for _ in range(size)] for _ in range(size)]

# 在區域中畫圓
for y in range(size):
    for x in range(size):
        # 計算每個點到圓心的距離
        distance = math.sqrt((x - center[0])**2 + (y - center[1])**2)
        if abs(distance - radius) &lt;= 0.5:  # 判斷點是否在圓周上
            grid[y][x] = '*'

# 顯示結果
for row in grid:
    print(''.join(row))
</pre>
<p>第二題</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from browser import html
from browser import document as doc

# 建立 canvas 超文件物件
canvas = html.CANVAS(width=400, height=400)
brython_div = doc["brython_div1"]
brython_div &lt;= canvas

# 每一格的 pixel 數
gs = 20

# canvas context
ctx = canvas.getContext("2d")

# 定義繪製矩形的函數
def dRect(lux, luy, w, h, s=1, c="lightgrey"):
    ctx.lineWidth = s
    ctx.strokeStyle = c
    ctx.beginPath()
    ctx.rect(lux, luy, w, h)
    ctx.stroke()

# 繪製網格
def grid(width, height, grid_pix):
    for i in range(width):
        for j in range(height):
            dRect(i * grid_pix, j * grid_pix, grid_pix, grid_pix, 1, "lightgrey")

# 填滿指定格子
def fill(x, y, color):
    ctx.fillStyle = color
    ctx.fillRect((x - 1) * gs, (y - 1) * gs, gs, gs)

# 判斷是否在圓形範圍內
def is_in_circle(cx, cy, x, y, r):
    return ((x - cx) ** 2 + (y - cy) ** 2) &lt;= r ** 2

# 圓形繪製
def draw_circle(grid_size, radius):
    center = (grid_size // 2) + 0.5  # 圓心位於中心
    for i in range(1, grid_size + 1):
        for j in range(1, grid_size + 1):
            # 檢查格子中心點是否在圓內
            if is_in_circle(center, center, i, j, radius):
                fill(i, j, "black")

# 主程式
grid(10, 10, gs)
draw_circle(10, 5)  # 圓的半徑為 4.5</pre>
<p></p>
<p></p>
<h3>w11_hw</h3>
<p><br/><br/></p>
<p><iframe allowfullscreen="allowfullscreen" data-mce-fragment="1" height="314" src="https://www.youtube.com/embed/crkTO3RM-6c?si=8SO3I7f--uxqrR7_%22%20title=%22YouTube%20video%20player%22%20frameborder=%220%22%20allow=%22accelerometer;%20autoplay;%20clipboard-write;%20encrypted-media;%20gyroscope;%20picture-in-picture;%20web-share%22%20referrerpolicy=%22strict-origin-when-cross-origin%22%20allowfullscreen%3E%3C/iframe%3E" width="560"></iframe></p>
<p>第一題</p>
<div>
<div class="syntaxhighlighter py" id="highlighter_974227">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py keyword">import</code> <code class="py plain">math</code></div>
<div class="line number2 index1 alt1"> </div>
<div class="line number3 index2 alt2"><code class="py comments"># 設定區域大小</code></div>
<div class="line number4 index3 alt1"><code class="py plain">size </code><code class="py keyword">=</code> <code class="py value">10</code></div>
<div class="line number5 index4 alt2"><code class="py plain">radius </code><code class="py keyword">=</code> <code class="py value">3</code>  <code class="py comments"># 圓的半徑</code></div>
<div class="line number6 index5 alt1"><code class="py plain">center </code><code class="py keyword">=</code> <code class="py plain">(size </code><code class="py keyword">/</code><code class="py keyword">/</code> <code class="py value">2</code><code class="py plain">, size </code><code class="py keyword">/</code><code class="py keyword">/</code> <code class="py value">2</code><code class="py plain">)  </code><code class="py comments"># 圓心位置在 5,5</code></div>
<div class="line number7 index6 alt2"> </div>
<div class="line number8 index7 alt1"><code class="py comments"># 創建 10x10 的字元區域</code></div>
<div class="line number9 index8 alt2"><code class="py plain">grid </code><code class="py keyword">=</code> <code class="py plain">[[</code><code class="py string">' '</code> <code class="py keyword">for</code> <code class="py plain">_ </code><code class="py keyword">in</code> <code class="py functions">range</code><code class="py plain">(size)] </code><code class="py keyword">for</code> <code class="py plain">_ </code><code class="py keyword">in</code> <code class="py functions">range</code><code class="py plain">(size)]</code></div>
<div class="line number10 index9 alt1"> </div>
<div class="line number11 index10 alt2"><code class="py comments"># 在區域中畫圓</code></div>
<div class="line number12 index11 alt1"><code class="py keyword">for</code> <code class="py plain">y </code><code class="py keyword">in</code> <code class="py functions">range</code><code class="py plain">(size):</code></div>
<div class="line number13 index12 alt2"><code class="py spaces">    </code><code class="py keyword">for</code> <code class="py plain">x </code><code class="py keyword">in</code> <code class="py functions">range</code><code class="py plain">(size):</code></div>
<div class="line number14 index13 alt1"><code class="py spaces">        </code><code class="py comments"># 計算每個點到圓心的距離</code></div>
<div class="line number15 index14 alt2"><code class="py spaces">        </code><code class="py plain">distance </code><code class="py keyword">=</code> <code class="py plain">math.sqrt((x </code><code class="py keyword">-</code> <code class="py plain">center[</code><code class="py value">0</code><code class="py plain">])</code><code class="py keyword">*</code><code class="py keyword">*</code><code class="py value">2</code> <code class="py keyword">+</code> <code class="py plain">(y </code><code class="py keyword">-</code> <code class="py plain">center[</code><code class="py value">1</code><code class="py plain">])</code><code class="py keyword">*</code><code class="py keyword">*</code><code class="py value">2</code><code class="py plain">)</code></div>
<div class="line number16 index15 alt1"><code class="py spaces">        </code><code class="py keyword">if</code> <code class="py functions">abs</code><code class="py plain">(distance </code><code class="py keyword">-</code> <code class="py plain">radius) &lt;</code><code class="py keyword">=</code> <code class="py value">0.5</code><code class="py plain">:  </code><code class="py comments"># 判斷點是否在圓周上</code></div>
<div class="line number17 index16 alt2"><code class="py spaces">            </code><code class="py plain">grid[y][x] </code><code class="py keyword">=</code> <code class="py string">'*'</code></div>
<div class="line number18 index17 alt1"> </div>
<div class="line number19 index18 alt2"><code class="py comments"># 顯示結果</code></div>
<div class="line number20 index19 alt1"><code class="py keyword">for</code> <code class="py plain">row </code><code class="py keyword">in</code> <code class="py plain">grid:</code></div>
<div class="line number21 index20 alt2"><code class="py spaces">    </code><code class="py functions">print</code><code class="py plain">(''.join(row))</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>第二題</p>
<div>
<div class="syntaxhighlighter py" id="highlighter_64579">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
<div class="line number40 index39 alt1">40</div>
<div class="line number41 index40 alt2">41</div>
<div class="line number42 index41 alt1">42</div>
<div class="line number43 index42 alt2">43</div>
<div class="line number44 index43 alt1">44</div>
<div class="line number45 index44 alt2">45</div>
<div class="line number46 index45 alt1">46</div>
<div class="line number47 index46 alt2">47</div>
<div class="line number48 index47 alt1">48</div>
<div class="line number49 index48 alt2">49</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py keyword">from</code> <code class="py plain">browser </code><code class="py keyword">import</code> <code class="py plain">html</code></div>
<div class="line number2 index1 alt1"><code class="py keyword">from</code> <code class="py plain">browser </code><code class="py keyword">import</code> <code class="py plain">document as doc</code></div>
<div class="line number3 index2 alt2"> </div>
<div class="line number4 index3 alt1"><code class="py comments"># 建立 canvas 超文件物件</code></div>
<div class="line number5 index4 alt2"><code class="py plain">canvas </code><code class="py keyword">=</code> <code class="py plain">html.CANVAS(width</code><code class="py keyword">=</code><code class="py value">400</code><code class="py plain">, height</code><code class="py keyword">=</code><code class="py value">400</code><code class="py plain">)</code></div>
<div class="line number6 index5 alt1"><code class="py plain">brython_div </code><code class="py keyword">=</code> <code class="py plain">doc[</code><code class="py string">"brython_div1"</code><code class="py plain">]</code></div>
<div class="line number7 index6 alt2"><code class="py plain">brython_div &lt;</code><code class="py keyword">=</code> <code class="py plain">canvas</code></div>
<div class="line number8 index7 alt1"> </div>
<div class="line number9 index8 alt2"><code class="py comments"># 每一格的 pixel 數</code></div>
<div class="line number10 index9 alt1"><code class="py plain">gs </code><code class="py keyword">=</code> <code class="py value">20</code></div>
<div class="line number11 index10 alt2"> </div>
<div class="line number12 index11 alt1"><code class="py comments"># canvas context</code></div>
<div class="line number13 index12 alt2"><code class="py plain">ctx </code><code class="py keyword">=</code> <code class="py plain">canvas.getContext(</code><code class="py string">"2d"</code><code class="py plain">)</code></div>
<div class="line number14 index13 alt1"> </div>
<div class="line number15 index14 alt2"><code class="py comments"># 定義繪製矩形的函數</code></div>
<div class="line number16 index15 alt1"><code class="py keyword">def</code> <code class="py plain">dRect(lux, luy, w, h, s</code><code class="py keyword">=</code><code class="py value">1</code><code class="py plain">, c</code><code class="py keyword">=</code><code class="py string">"lightgrey"</code><code class="py plain">):</code></div>
<div class="line number17 index16 alt2"><code class="py spaces">    </code><code class="py plain">ctx.lineWidth </code><code class="py keyword">=</code> <code class="py plain">s</code></div>
<div class="line number18 index17 alt1"><code class="py spaces">    </code><code class="py plain">ctx.strokeStyle </code><code class="py keyword">=</code> <code class="py plain">c</code></div>
<div class="line number19 index18 alt2"><code class="py spaces">    </code><code class="py plain">ctx.beginPath()</code></div>
<div class="line number20 index19 alt1"><code class="py spaces">    </code><code class="py plain">ctx.rect(lux, luy, w, h)</code></div>
<div class="line number21 index20 alt2"><code class="py spaces">    </code><code class="py plain">ctx.stroke()</code></div>
<div class="line number22 index21 alt1"> </div>
<div class="line number23 index22 alt2"><code class="py comments"># 繪製網格</code></div>
<div class="line number24 index23 alt1"><code class="py keyword">def</code> <code class="py plain">grid(width, height, grid_pix):</code></div>
<div class="line number25 index24 alt2"><code class="py spaces">    </code><code class="py keyword">for</code> <code class="py plain">i </code><code class="py keyword">in</code> <code class="py functions">range</code><code class="py plain">(width):</code></div>
<div class="line number26 index25 alt1"><code class="py spaces">        </code><code class="py keyword">for</code> <code class="py plain">j </code><code class="py keyword">in</code> <code class="py functions">range</code><code class="py plain">(height):</code></div>
<div class="line number27 index26 alt2"><code class="py spaces">            </code><code class="py plain">dRect(i </code><code class="py keyword">*</code> <code class="py plain">grid_pix, j </code><code class="py keyword">*</code> <code class="py plain">grid_pix, grid_pix, grid_pix, </code><code class="py value">1</code><code class="py plain">, </code><code class="py string">"lightgrey"</code><code class="py plain">)</code></div>
<div class="line number28 index27 alt1"> </div>
<div class="line number29 index28 alt2"><code class="py comments"># 填滿指定格子</code></div>
<div class="line number30 index29 alt1"><code class="py keyword">def</code> <code class="py plain">fill(x, y, color):</code></div>
<div class="line number31 index30 alt2"><code class="py spaces">    </code><code class="py plain">ctx.fillStyle </code><code class="py keyword">=</code> <code class="py plain">color</code></div>
<div class="line number32 index31 alt1"><code class="py spaces">    </code><code class="py plain">ctx.fillRect((x </code><code class="py keyword">-</code> <code class="py value">1</code><code class="py plain">) </code><code class="py keyword">*</code> <code class="py plain">gs, (y </code><code class="py keyword">-</code> <code class="py value">1</code><code class="py plain">) </code><code class="py keyword">*</code> <code class="py plain">gs, gs, gs)</code></div>
<div class="line number33 index32 alt2"> </div>
<div class="line number34 index33 alt1"><code class="py comments"># 判斷是否在圓形範圍內</code></div>
<div class="line number35 index34 alt2"><code class="py keyword">def</code> <code class="py plain">is_in_circle(cx, cy, x, y, r):</code></div>
<div class="line number36 index35 alt1"><code class="py spaces">    </code><code class="py keyword">return</code> <code class="py plain">((x </code><code class="py keyword">-</code> <code class="py plain">cx) </code><code class="py keyword">*</code><code class="py keyword">*</code> <code class="py value">2</code> <code class="py keyword">+</code> <code class="py plain">(y </code><code class="py keyword">-</code> <code class="py plain">cy) </code><code class="py keyword">*</code><code class="py keyword">*</code> <code class="py value">2</code><code class="py plain">) &lt;</code><code class="py keyword">=</code> <code class="py plain">r </code><code class="py keyword">*</code><code class="py keyword">*</code> <code class="py value">2</code></div>
<div class="line number37 index36 alt2"> </div>
<div class="line number38 index37 alt1"><code class="py comments"># 圓形繪製</code></div>
<div class="line number39 index38 alt2"><code class="py keyword">def</code> <code class="py plain">draw_circle(grid_size, radius):</code></div>
<div class="line number40 index39 alt1"><code class="py spaces">    </code><code class="py plain">center </code><code class="py keyword">=</code> <code class="py plain">(grid_size </code><code class="py keyword">/</code><code class="py keyword">/</code> <code class="py value">2</code><code class="py plain">) </code><code class="py keyword">+</code> <code class="py value">0.5</code>  <code class="py comments"># 圓心位於中心</code></div>
<div class="line number41 index40 alt2"><code class="py spaces">    </code><code class="py keyword">for</code> <code class="py plain">i </code><code class="py keyword">in</code> <code class="py functions">range</code><code class="py plain">(</code><code class="py value">1</code><code class="py plain">, grid_size </code><code class="py keyword">+</code> <code class="py value">1</code><code class="py plain">):</code></div>
<div class="line number42 index41 alt1"><code class="py spaces">        </code><code class="py keyword">for</code> <code class="py plain">j </code><code class="py keyword">in</code> <code class="py functions">range</code><code class="py plain">(</code><code class="py value">1</code><code class="py plain">, grid_size </code><code class="py keyword">+</code> <code class="py value">1</code><code class="py plain">):</code></div>
<div class="line number43 index42 alt2"><code class="py spaces">            </code><code class="py comments"># 檢查格子中心點是否在圓內</code></div>
<div class="line number44 index43 alt1"><code class="py spaces">            </code><code class="py keyword">if</code> <code class="py plain">is_in_circle(center, center, i, j, radius):</code></div>
<div class="line number45 index44 alt2"><code class="py spaces">                </code><code class="py plain">fill(i, j, </code><code class="py string">"black"</code><code class="py plain">)</code></div>
<div class="line number46 index45 alt1"> </div>
<div class="line number47 index46 alt2"><code class="py comments"># 主程式</code></div>
<div class="line number48 index47 alt1"><code class="py plain">grid(</code><code class="py value">10</code><code class="py plain">, </code><code class="py value">10</code><code class="py plain">, gs)</code></div>
<div class="line number49 index48 alt2"><code class="py plain">draw_circle(</code><code class="py value">10</code><code class="py plain">, </code><code class="py value">5</code><code class="py plain">)  </code><code class="py comments"># 圓的半徑為 4.5</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p></p>
<p>11月27號 </p>
<p>第一題 </p>
<div>
<div class="syntaxhighlighter py" id="highlighter_464979">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py plain">n </code><code class="py keyword">=</code> <code class="py value">11</code> <code class="py plain">　</code><code class="py comments"># 總共的行數</code></div>
<div class="line number2 index1 alt1"><code class="py plain">space </code><code class="py keyword">=</code><code class="py plain">　</code><code class="py string">'_'</code></div>
<div class="line number3 index2 alt2"><code class="py plain">center </code><code class="py keyword">=</code><code class="py plain">n</code><code class="py keyword">/</code><code class="py keyword">/</code><code class="py value">2</code></div>
<div class="line number4 index3 alt1"><code class="py comments">#print(center)</code></div>
<div class="line number5 index4 alt2"> </div>
<div class="line number6 index5 alt1"><code class="py keyword">for</code> <code class="py plain">y </code><code class="py keyword">in</code> <code class="py functions">range</code><code class="py plain">(n):</code></div>
<div class="line number7 index6 alt2"><code class="py spaces">    </code><code class="py keyword">for</code> <code class="py plain">x </code><code class="py keyword">in</code> <code class="py functions">range</code><code class="py plain">(n)</code></div>
<div class="line number8 index7 alt1"><code class="py spaces">        </code><code class="py functions">print</code><code class="py plain">(</code><code class="py string">"("</code><code class="py plain">,ｘ,＂,＂,ｙ,＂）＂,ｓｅｐ＝＂＂）</code></div>
</div>
</td>
</tr>
</tbody>
</table>
<p>第二題</p>
</div>
</div>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from browser import html
from browser import document as doc
 
# 利用 html 建立 canvas 超文件物件
canvas = html.CANVAS(width = 400, height = 400)
brython_div = doc["brython_div1"]
brython_div &lt;= canvas
 
# 每一格的 pixel 數
gs = 20
 
#gs*tc = canvas width and height
 
ctx = canvas.getContext("2d")
width = 11
height = 11
 
 
for i in range(width):
     for j in range(height):
        #dRect(i*gs, j*gs, gs, gs, 1, "lightgrey")
         ctx.lineWidth = 1
         ctx.strokeStyle = 'red'
         ctx.beginPath();
         ctx.rect(i*gs,j*gs,gs,gs)
         ctx.stroke();
 
from browser import html
from browser import document as doc
 
# 利用 html 建立 canvas 超文件物件
canvas = html.CANVAS(width = 400, height = 400)
brython_div = doc["brython_div1"]
brython_div &lt;= canvas
 
# 每一格的 pixel 數
gs = 20
 
#gs*tc = canvas width and height
 
ctx = canvas.getContext("2d")
width = 11
height = 11
 
 
for i in range(width):
     for j in range(height):
        #dRect(i*gs, j*gs, gs, gs, 1, "lightgrey")
         ctx.lineWidth = 1
         ctx.strokeStyle = 'red'
         ctx.beginPath();
         ctx.rect(i*gs,j*gs,gs,gs)
         ctx.stroke();
</pre>
<p><br/><br/><br/><br/></p>
<p><br/><br/></p>
<h3>w13_hw</h3>
<p><a href="https://mdecp2024.github.io/hw-wlison888/content/Brython.html?src=https://gist.githubusercontent.com/41323225/4f488054fa2332ca41d2ddd4ce0afbbb/raw/47bdd976eee43b02f1b755e6d0a338796c568f38/w13(2)">一個格子</a></p>
<p><a href="https://mdecp2024.github.io/hw-wlison888/content/Brython.html?src=https://gist.githubusercontent.com/41323225/4f488054fa2332ca41d2ddd4ce0afbbb/raw/47bdd976eee43b02f1b755e6d0a338796c568f38/w13">兩個格子</a></p>
<p><a href="https://mdecp2024.github.io/hw-wlison888/content/Brython.html?src=https://gist.githubusercontent.com/41323225/45d8476192bec2780ae792c08f797a45/raw/dfc38d73723fef8ea6d1eedca92b11ee730e58df/gistfile1.txt">塗滿顏色的兩個格子</a></p>
<h3>w14_ex</h3>
<h4><a href="https://mdecp2024.github.io/hw-wlison888/content/Brython.html?src=https://gist.githubusercontent.com/41323225/e032b2e3ebb0beeffb618a84321502dd/raw/03bcca85f4e92edc41b6270aab68265d77e4d4cb/777.py">多個圓相交區域著色</a></h4>
<h3>w15</h3>
<p>!<a href="https://mdecp2024.github.io/hw-wlison888/content/Brython.html?src=https://gist.githubusercontent.com/41323225/f114190e36a5877f42fd8b4d98b7d5ec/raw/2cceeb89bb383961277cc718c6b63b5196af0342/w15">從 1 累加到 100</a></p>
<p>2<a href="https://mdecp2024.github.io/hw-wlison888/content/Brython.html?src=https://gist.githubusercontent.com/41323225/1642afbca2d3dd7581bfb92cd0a932cc/raw/0447791eeda8424f3e4ed926421b1cf75158d4be/w15">addto(1,100)</a></p>
<p>3<a href="https://gist.githubusercontent.com/41323225/42b21fdad29df360d58d7daaedc64726/raw/fe5efdd00728700afefbead1b71e78cf4c4ff5bc/gistfile1.txt">ad_only_evend</a></p>
<ul>
<li>
<p><code>add_only_even(init, upto)</code> 函數：</p>
<ul>
<li><code>init</code> 是開始的數字，<code>upto</code> 是結束的數字。</li>
<li>函數會從 <code>init</code> 到 <code>upto</code> 檢查每個數字，並且只累加偶數。</li>
</ul>
</li>
<li>
<p><code>for</code> 迴圈用來檢查每個數字是否為偶數 (<code>i % 2 == 0</code>)，如果是，則加到 <code>total</code> 中。</p>
</li>
<li>
<p>最後，回傳總和並顯示出來。                                                                                   </p>
</li>
</ul>
<p>4<a href="https://mdecp2024.github.io/hw-wlison888/content/Brython.html?src=https://gist.githubusercontent.com/41323225/eb4559279b16125ffc4dd074d26a44c5/raw/22f0c47869b1a8cdf37d2b2647614cdf9507ffbe/gistfile1.txt">add_avoid_8</a></p>
<p></p>
<ul>
<li><code>addto(init, upto)</code> 函數：
<ul>
<li>使用 <code>for</code> 迴圈遍歷從 <code>init</code> 到 <code>upto</code> 之間的每一個數字。</li>
<li>每次迴圈檢查數字的尾數是否為 <code>8</code>，如果是，就把這個數字加到總和 <code>total</code> 中。</li>
</ul>
</li>
<li>最後返回計算出的總和。</li>
</ul>
<p></p>
<p></p><h1>HW2</h1>
<h4>主題: Python 的數列、判斷式與重複迴圈 (20%)<span style="background-color: #ffff99;"><br/></span></h4>
<p style="padding-left: 30px;">Python 課程教材: <a href="https://www.learnpythonwithjupyter.com/">https://www.learnpythonwithjupyter.com/</a> - PART 2 and Part 3</p>
<hr/>
<p>延續 HW 1 網頁資料整理與程式練習方法, 整理下列內容 (20%):</p>
<p>PART 2: Introduction to lists and if/else statements</p>
<p>PART 3: Introduction to the for loop</p>
<p>完成上述流程整理後, 請將 HW2 自評分數輸入 cp2024 自評表單中.</p>
<p></p>
<p></p>
<h2>HW 2 Exam</h2>
<p>每六人為一組進行協同程式練習</p>
<p>透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 2 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯.</p>
<h1>HW 3</h1>
<h4>主題: Python 的數字、演算法與迴圈 (20%)</h4>
<p style="padding-left: 30px;">Python 課程教材: <a href="https://www.learnpythonwithjupyter.com/">https://www.learnpythonwithjupyter.com/</a> - PART 4 and Part 5</p>
<p>完成上述流程整理後, 請將 HW3 自評分數輸入 cp2024 自評表單中.</p>
<h2>HW 3 Exam</h2>
<p>每六人為一組進行協同程式練習</p>
<p>透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 3 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯.</p>
<h1>HW 4</h1>
<h4>主題: 利用 Python 控制機電模擬系統 (20%)</h4>
<p style="padding-left: 30px;">利用 <a href="https://solvespace.com/">https://solvespace.com/</a> 建立機械系統零組件</p>
<p style="padding-left: 30px;">利用 <a href="https://www.coppeliarobotics.com/">CoppeliaSim</a> 建立機電模擬系統</p>
<p style="padding-left: 30px;">利用 <a href="https://manual.coppeliarobotics.com/en/zmqRemoteApiOverview.htm">Python</a> 跨網路控制瀏覽器上的機電模擬系統</p>
<p style="padding-left: 30px;">範例:</p>
<p style="padding-left: 60px;"><a href="/downloads/cd2023_pj3ag4_zmq_football_4.7.7z">cd2023_pj3ag4_zmq_football_4.7.7z</a></p>
<p style="padding-left: 60px;"><a href="https://localhost:9446/downloads/cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z">cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z</a></p>
<p>完成上述流程整理後, 請將 HW4 自評分數輸入 cp2024 自評表單中.</p>
<h2>HW 4 Exam</h2>
<p>每六人為一組進行協同程式練習</p>
<p>透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 4 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯.</p>
<h1>Final Report</h1>
<p>期末口頭與書面專題報告 (20%)</p>
<p>期末口頭專題報告影片:</p>
<p style="padding-left: 30px;">......</p>
<p>期末書面專題報告檔案 (pdf):</p>
<p style="padding-left: 30px;">......</p>
<p>電腦輔助設計與實習課程總結心得:</p>
<p style="padding-left: 30px;">......</p>
<p>期末報告自評成績:</p>
<p style="padding-left: 30px;">完成上述流程後, 請將 Final Report 自評分數輸入 cp2024 自評表單中.</p>
<h1>Brython</h1>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Block</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>